[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "webscrape-tui"
version = "2.1.0"
description = "Modern Python-based Text User Interface for web scraping with multi-user support, AI analysis, and REST API"
readme = "README.md"
requires-python = ">=3.8,<3.13"
license = {text = "MIT"}
authors = [
    {name = "WebScrape-TUI Development Team", email = "dev@webscrape-tui.example.com"}
]
maintainers = [
    {name = "WebScrape-TUI Development Team", email = "dev@webscrape-tui.example.com"}
]
keywords = [
    "web-scraping",
    "tui",
    "terminal",
    "textual",
    "beautifulsoup",
    "ai",
    "multi-user",
    "rest-api",
    "cli",
    "python"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Framework :: FastAPI",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Shells",
    "Topic :: Terminals",
    "Typing :: Typed"
]

dependencies = [
    "textual>=0.40.0",
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    "PyYAML>=6.0.0",
    "APScheduler>=3.10.0",
    "matplotlib>=3.7.0",
    "pandas>=2.0.0",
    "openpyxl>=3.1.0",
    "reportlab>=4.0.0",
    "wordcloud>=1.9.0",
    "spacy>=3.7.0",
    "sentence-transformers>=2.2.0",
    "scipy>=1.11.0",
    "nltk>=3.8.0",
    "scikit-learn>=1.3.0",
    "gensim>=4.3.0,<4.4.0",
    "networkx>=3.0",
    "rouge-score>=0.1.2",
    "fuzzywuzzy>=0.18.0",
    "python-Levenshtein>=0.20.0",
    "bcrypt>=4.0.0,<5.0.0",
    # v2.1.0 new dependencies
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "python-jose[cryptography]>=3.3.0",
    "aiosqlite>=0.19.0",
    "click>=8.1.0",
    "redis>=5.0.0",
    "tenacity>=8.2.0",
    "httpx>=0.25.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "httpx>=0.25.0"
]

api = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "python-jose[cryptography]>=3.3.0"
]

cache = [
    "redis>=5.0.0"
]

all = [
    "webscrape-tui[dev,api,cache]"
]

[project.urls]
Homepage = "https://github.com/doublegate/WebScrape-TUI"
Documentation = "https://github.com/doublegate/WebScrape-TUI/blob/main/README.md"
Repository = "https://github.com/doublegate/WebScrape-TUI"
Changelog = "https://github.com/doublegate/WebScrape-TUI/blob/main/CHANGELOG.md"
"Bug Tracker" = "https://github.com/doublegate/WebScrape-TUI/issues"

[project.scripts]
scrapetui = "scrapetui.__main__:main"
scrapetui-tui = "scrapetui.app:main"
scrapetui-api = "scrapetui.api.main:main"
scrapetui-cli = "scrapetui.cli:cli"

[tool.setuptools.packages.find]
where = ["."]
include = ["scrapetui*"]
exclude = ["tests*", "docs*", "scripts*"]

[tool.setuptools.package-data]
scrapetui = ["*.tcss", "py.typed"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py38"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_calls = false
disallow_any_generics = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "textual.*",
    "spacy.*",
    "sentence_transformers.*",
    "gensim.*",
    "nltk.*",
    "sklearn.*",
    "rouge_score.*",
    "fuzzywuzzy.*"
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["scrapetui"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "@abstractmethod"
]
