# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Python 3.13 excluded: gensim dependency incompatible with Python 3.13
        # See: INSTALL-ARCH.md and docs/TROUBLESHOOTING.md for details
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        # Additional dependencies for Phase 3 REST API
        python -m pip install email-validator
    - name: Download spaCy model
      run: |
        # Required for AI features (NER, keyword extraction)
        python -m spacy download en_core_web_sm
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        # Run pytest with timeout to prevent hanging tests
        # Each test limited to 30 seconds, full suite limited to 10 minutes
        # Test unit/, api/, and migrated legacy test files
        pytest tests/unit/ tests/api/ tests/test_analytics.py tests/test_performance.py tests/test_scheduling.py tests/test_utils.py --timeout=30 --timeout-method=thread --tb=short
